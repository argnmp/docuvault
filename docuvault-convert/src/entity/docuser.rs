//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "docuser")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub email: String,
    pub hash: String,
    pub nickname: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::docfile::Entity")]
    Docfile,
    #[sea_orm(has_many = "super::docorg::Entity")]
    Docorg,
    #[sea_orm(has_many = "super::scope::Entity")]
    Scope,
    #[sea_orm(has_many = "super::sequence::Entity")]
    Sequence,
}

impl Related<super::docfile::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Docfile.def()
    }
}

impl Related<super::docorg::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Docorg.def()
    }
}

impl Related<super::scope::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Scope.def()
    }
}

impl Related<super::sequence::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Sequence.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
